<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- 演示库，数据源配置 -->
    <bean id="dataSource_yclyic" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="ds_yclyic"/>
        <property name="xaDataSourceClassName" value="com.alibaba.druid.pool.xa.DruidXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="url">${yclyic.url}</prop>
                <prop key="username">${yclyic.username}</prop>
                <prop key="password">${yclyic.password}</prop>
                <prop key="driverClassName">${yclyic.driverClass}</prop>
                <prop key="maxActive">${jdbc.maxActive}</prop>
                <prop key="initialSize">${jdbc.initialSize}</prop>
                <prop key="maxWait">${jdbc.maxWait}</prop>
                <prop key="minIdle">${jdbc.minIdle}</prop>
                <prop key="timeBetweenEvictionRunsMillis">${jdbc.timeBetweenEvictionRunsMillis}</prop>
                <prop key="minEvictableIdleTimeMillis">${jdbc.minEvictableIdleTimeMillis}</prop>
                <prop key="validationQuery">${jdbc.validationQuery}</prop>
                <prop key="testWhileIdle">${jdbc.testWhileIdle}</prop>
                <prop key="testOnBorrow">${jdbc.testOnBorrow}</prop>
                <prop key="testOnReturn">${jdbc.testOnReturn}</prop>
                <prop key="filters">stat</prop>
                <prop key="removeAbandonedTimeout">${jdbc.removeAbandonedTimeout}</prop>
            </props>
        </property>
        <property name="poolSize" value="3" />
        <property name="minPoolSize" value="1" />
        <property name="maxPoolSize" value="5" />
        <!--连接最大存活时间，超过这个且没有正在使用的连接将自动销毁,0无限制，1000 =1000s,对于一些会自动中断连接的数据库如mysql，可以设置这个参数，在达到这个时间的时候会自动关闭连接，下次数据库调用的时候就会新建-->
        <property name="maxLifetime" value="60"/>
        <!--获取连接失败重新获等待最大时间，在这个时间内如果有可用连接，将返回-->
        <property name="borrowConnectionTimeout" value="5" />
        <!--java数据库连接池，最大可等待获取datasouce的时间-->
        <!-- <property name="loginTimeout" value="${jdbc.loginTimeout_demo}"/>  -->
        <!--连接回收时间-->
        <!-- <property name="maintenanceInterval" value="${jdbc.maintenanceInterval_demo}" />  -->
        <!--最大闲置时间，超过最小连接池连接的连接将关闭-->
        <!-- <property name="maxIdleTime" value="${jdbc.maxIdleTime_demo}" />  -->
        <!--最大获取数据时间，如果不设置这个值，Atomikos使用默认的5分钟，那么在处理大批量数据读取的时候，一旦超过5分钟，就会抛出类似 Resultset is close 的错误.-->
        <!--<property name="reapTimeout" value="${jdbc.reapTimeout_demo}" />-->
        <!--<property name="testQuery" value="${jdbc.testQuery_demo}" />-->
    </bean>

    <bean id="sqlSessionFactory_yclyic" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource_yclyic" />
        <property name="mapperLocations" value="classpath:mapper/yclyic/**/*.xml" />
        <!-- 没有mybatis配置文件时，使用上一行配置 -->
        <!--<property name="configLocation" value="classpath:mybatis-config.xml"/>-->
        <property name="plugins">
            <!-- mybatis 分页插件配置 -->
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            <!-- 数据库方言 -->
                            helperDialect=oracle
                            <!-- 分页合理化参数 -->
                            reasonable=true
                            <!--supportMethodsArguments=true-->
                            <!--params=count=countSql-->
                            <!-- 根据多数据源自动识别对应方言的分页 -->
                            autoRuntimeDialect=true

                            <!-- 默认值为 false，当该参数设置为 true 时，如果 pageSize=0 或者 RowBounds.limit = 0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型） -->
                            pageSizeZero=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <bean id="mybatisConfigurer_yclyic" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_yclyic"/>
        <property name="basePackage" value="com.whpe.dao.yclyic" />
    </bean>

</beans>